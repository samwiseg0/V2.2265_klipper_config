[delayed_gcode DELAYED_IDLE_LIGHTS]
initial_duration: 0
gcode:
  {action_respond_info("DELAYED GCODE: Set lights to idle preset")}
  LIGHTS PRESET=IDLE

[delayed_gcode DELAYED_LIGHTS_OFF]
initial_duration: 0
gcode:
  {% if printer.idle_timeout.state == "Idle" or "Ready" %}
    {action_respond_info("DELAYED GCODE: Turnning lights off.")}
    LIGHTS_OFF
  {% endif %}

[delayed_gcode DELAYED_VOC_OFF]
initial_duration: 0
gcode:
  {% set heater_bed = printer["heater_bed"] %}
  {action_respond_info("DELAYED GCODE: VOC fan shutdown...")}
  {% if heater_bed.temperature > 50 %}
    {action_respond_info("DELAYED_VOC_OFF: Bed temp cooldown not reached BED_TEMP: %.2f C..." % (heater_bed.temperature))}
    UPDATE_DELAYED_GCODE ID=DELAYED_VOC_OFF DURATION=300
  {% elif heater_bed.temperature < 50 %}
    VOC_FAN FSPEED=0
    {action_respond_info("DELAYED_VOC_OFF: Bed cooldown temp reached BED_TEMP: %.2f C..." % (heater_bed.temperature))}
    UPDATE_DELAYED_GCODE ID=DELAYED_VOC_OFF DURATION=0
  {% else %}
    {action_respond_info("DELAYED_VOC_OFF: Killing loop. No action taken. BED_TEMP: %.2f C..." % (heater_bed.temperature))}
  {% endif %}

[delayed_gcode KLIPPER_STARTUP]
initial_duration: 2
gcode:
  {action_respond_info("DELAYED GCODE: Klipper Startup...")}
  SET_PIN PIN=Buttons VALUE=1
  LIGHTS PRESET=IDLE
  SFS_DISABLE
  UPDATE_DELAYED_GCODE ID=DELAYED_LIGHTS_OFF DURATION=7200

[delayed_gcode DELAYED_MCU_OFF]
initial_duration: 0
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    {action_respond_info("DELAYED GCODE: Power off MCU")}
    POWER_OFF_MCU
  {% else %}
    {action_respond_info("DELAYED GCODE: Not turning off MCU! The printer is not idle! CURRENT STATE: %s " % (printer.idle_timeout.state))}
  {% endif %}

[delayed_gcode DELAYED_DISABLE_STEPPERS]
initial_duration: 0
gcode:
  {action_respond_info("DELAYED GCODE: Disabling steppers...")}
  M84

[delayed_gcode FILAMENT_BOX_CONTROL_LOOP]
initial_duration: 5
gcode:
  {% set sensor = printer["htu21d filament"] %}
  {% set filament_box = printer["heater_generic filament_box"] %}
  {action_respond_info("DELAYED GCODE: Running filament box control loop...")}
  {% if sensor.humidity > 15 %}
    {% if filament_box.target > 0 %}
      {action_respond_info("FILAMENT_BOX_LOOP: No action taken SET TEMP: %.0f C HUMIDITY: %.2f%%" % (filament_box.target, sensor.humidity))}
      UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=1800
    {% elif filament_box.target == 0 %}
      {action_respond_info("FILAMENT_BOX_LOOP: Turning filament box heater ON. HUMIDITY: %.2f%%" % (sensor.humidity))}
      FILAMENT_BOX T=85
      UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=1800
    {% endif %}
  {% elif sensor.humidity < 15 and filament_box.target == 0 %}
    {action_respond_info("FILAMENT_BOX_LOOP: Humidity is below threshold and heater is off.  HUMIDITY: %.2f%%" % (sensor.humidity))}
    UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=900
  {% else %}
    {action_respond_info("FILAMENT_BOX_LOOP: Turning filament box heater OFF. HUMIDITY: %.2f%%" % (sensor.humidity))}
    FILAMENT_BOX T=0
    UPDATE_DELAYED_GCODE ID=FILAMENT_BOX_CONTROL_LOOP DURATION=900
  {% endif %}

[delayed_gcode PRINT_COOLDOWN_LOOP]
initial_duration: 0
gcode:
  {% set heater_bed = printer["heater_bed"] %}
  {action_respond_info("DELAYED GCODE: Print cooldown loop...")}
  {% if heater_bed.temperature > 40 %}
    {action_respond_info("PRINT_COOLDOWN_LOOP: Bed temp cooldown not reached BED_TEMP: %.2f C..." % (heater_bed.temperature))}
    UPDATE_DELAYED_GCODE ID=PRINT_COOLDOWN_LOOP DURATION=120
  {% elif heater_bed.temperature < 40 %}
    {action_respond_info("PRINT_COOLDOWN_LOOP: Bed cooldown temp reached BED_TEMP: %.2f C..." % (heater_bed.temperature))}
    LIGHTS PRESET=PRINT_COOL
    UPDATE_DELAYED_GCODE ID=PRINT_COOLDOWN_LOOP DURATION=0
  {% else %}
    {action_respond_info("PRINT_COOLDOWN_LOOP: Killing loop. No action taken. BED_TEMP: %.2f C..." % (heater_bed.temperature))}
  {% endif %}